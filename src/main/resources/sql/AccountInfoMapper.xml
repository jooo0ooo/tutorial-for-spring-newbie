<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.joo.tutorial.spring.mapper.AccountInfoMapper">
	
	<select id="getAccountCountByUserSeq" parameterType="int" resultType="int">
		SELECT COUNT(*)
		FROM account_info
		WHERE user_seq = #{userSeq}
	</select>
	
	<insert id="insertAccount" parameterType="AccountInfo">
		INSERT INTO account_info 
			(
				account_num,
				user_seq,
				password,
				alias,
				sort_order
			)
		VALUES
			(
				#{accountNum},
				#{userSeq},
				#{password},
				#{alias},
				#{sortOrder}
			)
	</insert>
	
	<select id="getAccountInfoByAccountNum" parameterType="String" resultType="AccountInfo">
		SELECT *
		FROM account_info
		WHERE account_num = #{accountNum}
	</select>
	
	<select id="getAllAcountInfoByUserSeq" parameterType="int" resultType="AccountInfo">
		SELECT *
		FROM account_info
		WHERE user_seq = #{userSeq}
		ORDER BY sort_order
	</select>
	
	<select id="getCardInfoByAccountNum" parameterType="String" resultType="CardInfo">
		SELECT *
		FROM card_info
		WHERE account_num = #{accountNum}
	</select>
	
	<update id="updateAccount" parameterType="HashMap">
		UPDATE account_info
		SET alias = #{alias}
		WHERE account_num = #{accountNum}
	</update>
	
	<insert id="insertCard" parameterType="CardInfo">
		INSERT INTO card_info 
			(
				card_num,
				user_seq,
				account_num
			)
		VALUES
			(
				#{cardNum},
				#{userSeq},
				#{accountNum}
			)
	</insert>
	
	<insert id="insertBankMoneyBook" parameterType="BankMoneyBook">
		INSERT INTO bank_money_book 
			(
				transaction_type,
				amount,
				fee,
				content,
				account_num,
				deposit_account_num
			)
		VALUES
			(
				#{transactionType}::transaction_type,
				#{amount},
				#{fee},
				#{content},
				#{accountNum},
				#{depositAccountNum}
			)
	</insert>
	
	<select id="getBankMoneyBookBySeq" parameterType="int" resultType="BankMoneyBook">
		SELECT *
		FROM bank_money_book
		WHERE seq = #{seq}
	</select>
	
	<update id="upgradeSecurityLevel" parameterType="String">
		UPDATE account_info
		SET security_active = TRUE
		WHERE account_num = #{accountNum}
	</update>	
	
	<select id="getTransferHistory" parameterType="String" resultType="BankMoneyBook">
		SELECT bmb.*, true AS mine,
			CASE WHEN amount > 0 THEN 'minus' ELSE 'plus' END AS balance_change
		FROM bank_money_book AS bmb
		LEFT JOIN account_info AS a ON bmb.account_num = a.account_num
		WHERE a.account_num = #{accountNum}
		
		UNION ALL
		
		SELECT bmb.*, false AS mine,
			CASE WHEN amount > 0 THEN 'plus' ELSE 'minus' END AS balance_change
		FROM bank_money_book AS bmb
		LEFT JOIN account_info AS a ON bmb.deposit_account_num = a.account_num
		WHERE a.account_num = #{accountNum}
	</select>
	
</mapper>